user  nginx;  # กำหนดว่า worker process ของ Nginx จะใช้ user ชื่อ nginx

worker_processes  1;  # กำหนดจำนวนของ worker process เป็น 1

error_log  /var/log/nginx/error.log warn;  # กำหนด path ของไฟล์ error log และระดับของการเตือนเมื่อเกิด error
pid        /var/run/nginx.pid;  # กำหนด path ของไฟล์ PID ของ Nginx

events {  # กำหนดการตั้งค่า events
    worker_connections  1024;  # กำหนดจำนวนของ connections ที่แต่ละ worker process สามารถรองรับได้
}

http {  # เริ่มต้นการตั้งค่าสำหรับ HTTP server
    include       /etc/nginx/mime.types;  # ระบุไฟล์ที่มีรายการของ MIME types ที่ Nginx ควรใช้
    default_type  application/octet-stream;  # กำหนด MIME type ที่จะใช้เมื่อไม่สามารถระบุได้

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '  # กำหนดรูปแบบของ log ที่เก็บ
                      '$status $body_bytes_sent "$http_referer" '  # ระบุรายละเอียดต่างๆ เช่น IP ของ client, user, เวลา, request ที่ทำได้, สถานะการตอบกลับ, ขนาดของข้อมูลที่ส่งกลับ, referer, user agent, และ x-forwarded-for
                      '"$http_user_agent" "$http_x_forwarded_for"';  # กำหนดรายละเอียดเพิ่มเติมใน log เช่น user agent และ x-forwarded-for

    access_log  /var/log/nginx/access.log  main;  # กำหนด path ของไฟล์ access log และรูปแบบของ log ที่ต้องการ

    sendfile        on;  # เปิดใช้งาน sendfile เพื่อส่งไฟล์ถ้าเซิร์ฟเวอร์รองรับ
    keepalive_timeout  65;  # กำหนดเวลาที่เซิร์ฟเวอร์ใช้ส่ง HTTP headers ในการ keep-alive connection

    upstream nginx_backend {  # กำหนด upstream servers ที่ Nginx จะเชื่อมต่อ
        
        server  server1:80 fail_timeout=30s max_fails=2;
        server  server2:80 fail_timeout=30s max_fails=2;
        server  server3:80 fail_timeout=30s max_fails=2;
        # fail_timeout=30s: เมื่อเซิร์ฟเวอร์ล้มเหลว จำนวนเวลาที่ Nginx จะรอก่อนที่จะพยายามเชื่อมต่ออีกครั้ง ในที่นี้คือ 30 วินาที.
        # max_fails=2: จำนวนครั้งที่ Nginx จะละเว้นเซิร์ฟเวอร์ server1 หากมีการล้มเหลว โดยในที่นี้คือ 2 ครั้ง.
    }

    server {  # เริ่มต้นการตั้งค่าสำหรับ Virtual Server
        resolver 127.0.0.11 valid=30s;  # กำหนด resolver สำหรับการแปลงชื่อโดเมนเป็น IP address

        location / {  # กำหนดการตั้งค่าสำหรับ URL path "/"
            proxy_pass  http://nginx_backend;  # กำหนดว่า request ทั้งหมดที่เข้ามาที่ path "/" จะถูกส่งต่อไปยัง upstream servers ที่กำหนดข้างต้น
        }
    }
}